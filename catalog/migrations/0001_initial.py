# Generated by Django 5.1.4 on 2025-02-07 05:51

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Category_id', models.PositiveIntegerField(blank=True, help_text='Custom auto-incremented ID', null=True, unique=True)),
                ('name', models.CharField(help_text='Display name for the category', max_length=255, unique=True, validators=[django.core.validators.MinLengthValidator(2)])),
                ('slug', models.SlugField(help_text='URL-friendly version of the category name', max_length=255, unique=True)),
                ('style', models.CharField(choices=[('grid', 'Grid'), ('list', 'List'), ('custom', 'Custom Design')], default='grid', help_text='Visual display style for the category', max_length=50)),
                ('short_description', models.CharField(blank=True, help_text='Brief summary for search results or listings', max_length=255, null=True)),
                ('detailed_description', models.TextField(blank=True, help_text='Comprehensive description for SEO and context', null=True)),
                ('icon', models.ImageField(blank=True, help_text='Icon representing the category', null=True, upload_to='category_icons/', validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg', 'svg', 'webp'])])),
                ('banner', models.ImageField(blank=True, help_text='Large banner image at the top of the category page', null=True, upload_to='category_banners/', validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg', 'svg', 'webp'])])),
                ('side_image', models.ImageField(blank=True, help_text='Side image for promoting sub-categories', null=True, upload_to='category_side_images/', validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg', 'svg', 'webp'])])),
                ('is_active', models.BooleanField(default=True, help_text='Indicates if the category is currently active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, help_text='Parent category for multi-level hierarchy', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subcategories', to='catalog.category')),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Descriptive and concise product name', max_length=255, unique=True, validators=[django.core.validators.MinLengthValidator(2)])),
                ('slug', models.SlugField(help_text='URL-friendly version of the product name', max_length=255, unique=True)),
                ('short_description', models.CharField(blank=True, help_text='Brief summary for listings or previews', max_length=255, null=True)),
                ('detailed_description', models.TextField(blank=True, help_text='Detailed explanation including features and benefits', null=True)),
                ('main_image', models.ImageField(blank=True, help_text='Primary image representing the product', null=True, upload_to='product_images/main/', validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg', 'svg', 'webp'])])),
                ('quantity_in_stock', models.PositiveIntegerField(default=0, help_text='Available quantity of the product')),
                ('meta_tags', models.CharField(blank=True, default='', help_text='Meta tags for SEO purposes', max_length=2500, null=True)),
                ('meta_description', models.CharField(blank=True, default='', help_text='Meta description for SEO purposes', max_length=2500, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('categories', models.ManyToManyField(blank=True, help_text='Categories this product belongs to', related_name='products', to='catalog.category')),
            ],
            options={
                'verbose_name_plural': 'Products',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProductDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of the document', max_length=255)),
                ('document', models.FileField(help_text='Uploadable document related to the product', upload_to='product_documents/', validators=[django.core.validators.FileExtensionValidator(['pdf', 'doc', 'docx', 'txt', 'xls', 'xlsx', 'csv', 'ppt', 'pptx'])])),
                ('document_type', models.CharField(choices=[('manual', 'User Manual'), ('specification', 'Technical Specification'), ('brochure', 'Product Brochure'), ('other', 'Other Document')], default='Product Documentation', help_text='Classification of the document', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('product', models.ForeignKey(help_text='Product associated with this document', on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='catalog.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_image', models.ImageField(help_text='Additional images for the product', upload_to='product_images/', validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg', 'svg', 'webp'])])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='catalog.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductSpecification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specification_title', models.CharField(help_text='Specification heading', max_length=255)),
                ('specification', models.TextField(help_text='Specification value')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specifications', to='catalog.product')),
            ],
        ),
    ]
